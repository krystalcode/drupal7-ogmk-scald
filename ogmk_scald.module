<?php
/**
 * @file
 * Code for the Commerce Marketplace SCALD feature.
 */

include_once 'ogmk_scald.features.inc';


/**
 * Hooks.
 */

/**
 * Implements hook_entity_info_alter().
 */
function ogmk_scald_entity_info_alter(&$entity_info){
  $entity_info['scald_atom']['view modes']['ogmk_scald_basic_info'] = array(
    'label' => t('Basic Info'),
    'custom settings' => FALSE,
  );
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ogmk_scald_form_scald_atom_add_form_add_alter(&$form, &$form_state, $form_id) {
  // Remove ctools trail (Source >> Add >> Options).
  unset($form['ctools_trail']);

  // Improve buttons styles.
  $form['buttons']['cancel']['#value'] =  '<span class="fa fa-close"></span> ' . $form['buttons']['cancel']['#value'];
  $form['buttons']['next']['#value'] = $form['buttons']['next']['#value'] . ' <span class="fa fa-arrow-right"></span>';
  $form['buttons']['next']['#attributes']['class'] = array('btn-info');
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ogmk_scald_form_scald_atom_add_form_options_alter(&$form, &$form_state, $form_id) {
  // Remove ctools trail (Source >> Add >> Options).
  unset($form['ctools_trail']);

  // Improve buttons styles.
  $form['buttons']['return']['#value'] = '<span class="fa fa-send"></span> ' . t('Submit');
  $form['buttons']['cancel']['#value'] = '<span class="fa fa-close"></span> ' . $form['buttons']['cancel']['#value'];
}

/**
 * Implements hook_scald_wysiwyg_context_list_alter().
 */
function ogmk_scald_scald_wysiwyg_context_list_alter(&$contexts) {
  $contexts = array(
    'image' => array(
      'sdl_editor_representation' => t('Default (Large)'),
      'image_editor_xs'           => t('Extra Small'),
      'image_editor_sm'           => t('Small'),
      'image_editor_md'           => t('Medium'),
      'image_editor_lg'           => t('Large'),
      'scald_extra_single_line'   => t('Single Line Representation'),
    ),
  );
}

/**
 * Implements hook_scald_contexts().
 *
 * It defines a context for each image style that should be allowed for embedded
 * images in the rich text editor.
 */
function ogmk_scald_scald_contexts() {
  $contexts = array();

  // Get the image styles to generate contexts for.
  $editor_contexts = array(
    'xs' => 'Extra Small',
    'sm' => 'Small',
    'md' => 'Medium',
    'lg' => 'Large',
  );

  // Define a context for each image style.
  foreach ($editor_contexts as $key => $name) {
    $contexts['image_editor_' . $key] = _scald_extra_context_array(array('label' => $name));
  }

  // Add a context for rendering the title, description, and image/video of
  // atoms.
  $contexts['ogmk_scald_basic_info'] = array(
    'title'           => t('Basic Info'),
    'description'     => t('Atom with basic info (Title and Description).'),
    'render_language' => 'XHTML',
    'parseable'       => TRUE,
    'hidden'          => FALSE,
    'formats'         => array(),
  );

  return $contexts;
}

/**
 * Implements hook_scald_render().
 *
 * Render the image only without any metadata (authors, tags) when the context
 * starts with image_editor_ e.g. image_editor_sm.
 *
 * @Issue(
 *   "Allow to choose whether to render metadata or not",
 *   type="feature",
 *   priority="low"
 * )
 */
function ogmk_scald_scald_render($atom, $context, $options) {
  // Check if a function for rendering the requested context exists, and use
  // it if so.
  $func = '_ogmk_scald_scald_render__' . $context;
  if (function_exists($func)) {
    return $func($atom, $context, $options);
  }

  // If there is no function for rendering the requested context, the context
  // must be one of the image styles used by the rich text editor. If not,
  // nothing more to do here.
  if (strpos($context, 'image_editor_') !== 0) {
    return;
  }

  return $atom->rendered->player;
}


/**
 * Hook callbacks.
 */

/**
 * Implements hook_scald_render() via ogmk_scald_scald_render().
 *
 * Displays the title, the description, and the image or video of an atom
 * according to the settings defined in the corresponding view mode.
 *
 * @Issue(
 *   "Test the Basic Info scald context with image atoms"
 *   type="bug"
 *   priority="normal"
 * )
 */
function _ogmk_scald_scald_render__ogmk_scald_basic_info($atom, $context, $options) {
  // Get the description respecting the settings defined in the
  // 'ogmk_scald_basic_info' view mode.
  $description_items = field_get_items('scald_atom', $atom, 'scald_description');
  if ($description_items) {
    $description_render_array = field_view_value('scald_atom', $atom, 'scald_description', $description_items[0], 'ogmk_scald_basic_info');
  }

  $html = '<div class="atom-basic-info"><h4 class="atom-title">' . $atom->rendered->title . '</h4>' .
    '<div class="atom-description">' . render($description_render_array) . '</div>' .
    render($atom->rendered->player) .
    '</div>'
  ;

  return $html;
}
